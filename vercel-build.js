const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('Starting Vercel build process...');

// Ensure the server directory exists
const serverDist = path.join(__dirname, 'server', 'dist');
if (!fs.existsSync(serverDist)) {
  console.log('Creating server/dist directory...');
  fs.mkdirSync(serverDist, { recursive: true });
}

// Build the frontend
console.log('Building frontend...');
const frontendBuild = execSync('npm run build', { stdio: 'inherit' });

// Build the server
console.log('Building server...');
const serverBuild = execSync('npm run build --prefix server', { stdio: 'inherit' });

// Create a serverless function wrapper for Vercel
console.log('Creating serverless function...');
const serverlessWrapper = `
// This file is auto-generated by vercel-build.js
const server = require('./server/dist/server');

module.exports = async (req, res) => {
  // Set CORS headers
  res.setHeader('Access-Control-Allow-Credentials', true);
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET,OPTIONS,PATCH,DELETE,POST,PUT');
  res.setHeader(
    'Access-Control-Allow-Headers',
    'X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version'
  );

  // Handle preflight requests
  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  // Pass the request to the server
  return server.default(req, res);
};
`;

// Write the serverless wrapper
fs.writeFileSync(path.join(serverDist, 'serverless.js'), serverlessWrapper);

console.log('Vercel build completed successfully!');
